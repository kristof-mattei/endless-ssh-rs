[package]
name = "endless-ssh-rs"
version = "0.0.0-development"
edition = "2024"
rust-version = "1.88.0"
authors = ["Kristof Mattei"]
description = "endless-ssh-rs"
license = "MIT"
categories = ["ssh", "utility"]
keywords = ["ssh", "tarpit", "script-kiddies"]
repository = "https://github.com/kristof-mattei/endless-ssh-rs"
include = ["src/**", "/LICENSE", "/LICENSE-*"]

[lints.clippy]
# don't stop from compiling / running
all = "warn"
cargo = "warn"
complexity = "warn"
correctness = "warn"
pedantic = "warn"
perf = "warn"
# restriction = "warn"
style = "warn"
suspicious = "warn"

# ensure we do Arc::clone(&arc) instead of arc.clone()
clone_on_ref_ptr = { level = "deny", priority = 127 }

# this has 0 performance implications, the binding is compiled away, and it could cause issues
# when done blindly, plus it makes it harder to debug as you cannot put breakpoints on return
# values of functions (yet)
let_and_return = { level = "allow", priority = 127 }

# nothing we can do about multiple crate versions, so this lint just creates noise
multiple_crate_versions = { level = "allow", priority = 127 }

# this one is debatable. continue is used in places to be explicit, and to guard against
# issues when refactoring
needless_continue = { level = "allow", priority = 127 }

# this one causes confusion when combining variables (`foo`) and
# dereferenced variables (`foo.bar`). The latter cannot be inlined
# so we don't inline anything
uninlined-format-args = { level = "allow", priority = 127 }

[lints.rust]
let_underscore_drop = { level = "deny", priority = 127 }
non_ascii_idents = { level = "deny", priority = 127 }

[dependencies]
clap = { version = "4.5.41", features = ["cargo"] }
color-eyre = "0.6.5"
dotenvy = "0.15.7"
libc = "0.2.174"
mockall = "0.13.1"
mockall_double = "0.3.1"
rand = "0.9.1"
time = { version = "0.3.41", features = ["formatting"] }
tokio = { version = "1.46.1", features = [
    "rt-multi-thread",
    "macros",
    "time",
    "signal",
    "net",
    "sync",
    "io-util",
] }
tokio-util = "0.7.15"
tracing = "0.1.41"
tracing-error = "0.2.1"
tracing-subscriber = { version = "0.3.19", features = [
    "env-filter",
    "time",
    "tracing-log",
] }
